{"version":3,"sources":["components/message/index.tsx","components/switch/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Message","this","props","value","content","replace","__html","concat","_this$props","theme","index","amountNetto","Math","fround","payment","amount_netto","toFixed","dateF","Date","created_at","day","getDate","month","getMonth","newMonth","hour","getHours","minute","getMinutes","second","getSeconds","newDate","getFullYear","newContent","changeUrl","urls","match","finalUrls","react_default","a","createElement","className","login","currency","provider","dangerouslySetInnerHTML","createMarkup","React","PureComponent","Switch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleChange","bind","assertThisInitialized","type","checked","onChange","Component","App","myRef","createRef","inputRef","myInterval","state","isChecked","limit","listOfMsgs","showButton","listLength","fetchMessages","numberChange","loginChange","scrollEvent","scrollToTop","_this2","localStorage","getItem","setState","JSON","parse","myLimit","parseInt","document","title","window","addEventListener","removeEventListener","clearInterval","innerHeight","pageYOffset","body","offsetHeight","scrollY","_this3","_this$state","myBody","calls","method","params","offset","url","lang","token","fetch","stringify","headers","Access-Control-Allow-Origin","Content-Type","then","response","json","data","e","console","log","_this4","list","listLimit","undefined","slice","map","message","key","style","height","fontSize","_this5","setItem","toString","_this6","currentTarget","setTimeout","isNaN","_this7","scroll","top","behavior","_this$state2","components_switch","renderMsgs","onClick","display","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2dc6e55.chunk.js","sourcesContent":["import React, { createRef } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nclass Message extends React.PureComponent<any, any> {\r\n  public changeUrl() {\r\n    const {value} = this.props;\r\n    const {content} = value;\r\n\r\n    const urls = content.replace(\"https:\", \"https://\");\r\n    const ytLinks = urls.replace(\"youtube.com\", \"youtube.com/\");\r\n\r\n    const picosongLinks = ytLinks.replace(\"picosong.com\", \"picosong.com/\");\r\n\r\n    const ytShortLinks = picosongLinks.replace(\"youtu.be\", \"youtu.be/\");\r\n\r\n    const sCLinks = ytShortLinks.replace(\"soundcloud.com\", \"soundcloud.com/\");\r\n\r\n    const finalSCLinks = sCLinks.replace(\"[...]\", \"/\");\r\n\r\n    return finalSCLinks;\r\n  }\r\n\r\n  public createMarkup(content: any) {\r\n    return { __html: `${content}` };\r\n  }\r\n\r\n  public render() {\r\n\r\n    const {value, theme, index} = this.props;\r\n\r\n    // const amountBrutto = Math.fround(value.payment.amount_brutto / 100).toFixed(2);\r\n    const amountNetto = Math.fround(value.payment.amount_netto / 100).toFixed(2);\r\n    // const feeAmountNetto = parseFloat(Math.fround(value.payment.fee_less_amount_netto / 100).toFixed(2));\r\n\r\n    const dateF = new Date(value.created_at);\r\n\r\n    const day = dateF.getDate() < 10 ? `0${dateF.getDate()}` : dateF.getDate();\r\n    const month = dateF.getMonth() + 1;\r\n    const newMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const hour = dateF.getHours() < 10 ? `0${dateF.getHours()}` : dateF.getHours();\r\n    const minute = dateF.getMinutes() < 10 ? `0${dateF.getMinutes()}` : dateF.getMinutes();\r\n    const second = dateF.getSeconds() < 10 ? `0${dateF.getSeconds()}` : dateF.getSeconds();\r\n\r\n    const newDate = `${day}-${newMonth}-${dateF.getFullYear()} ${hour}:${minute}:${second}`;\r\n\r\n    const newContent = this.changeUrl();\r\n\r\n    const urls = newContent.match(/\\bhttps?:\\/\\/\\S+/);\r\n\r\n    const finalUrls = newContent.replace(urls, `<a href=\"${urls}\">${urls}</a>`);\r\n\r\n    return (\r\n      <div className={`message_container ${theme ? \"message_container_dark_theme\" : \"\"}`}>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_login\">{value.login}</div>\r\n          <div className=\"message_currency\">\r\n            {amountNetto} {value.payment.currency}\r\n            {/* <div\r\n                className=\"tooltip\"\r\n                // title=\"Kwota, którą wysyła donejtor\"\r\n            >\r\n              {amountNetto} {value.payment.currency}\r\n              <span className=\"tooltiptext\">Kwota, którą wysyła donejtor</span>\r\n            </div>\r\n            <div\r\n                className=\"tooltip\"\r\n                // title=\"Kwota, którą prawdopodobnie dostaje streamer\"\r\n            >\r\n                {feeAmountNetto} {value.payment.currency}\r\n                <span className=\"tooltiptext\">Kwota, którą prawdopodobnie dostaje streamer</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_date_prov\">{newDate}</div>\r\n          <div className=\"message_date_prov\">\r\n            Płatność: {value.payment.provider}\r\n          </div>\r\n        </div>\r\n        <div className=\"message_content\" dangerouslySetInnerHTML={this.createMarkup(finalUrls)} />\r\n        <div className=\"numberOfDonate\">{index + 1}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\ninterface IProps {\r\n  checked: boolean;\r\n  toggleChange: () => void;\r\n}\r\n\r\nclass Switch extends Component<IProps, {}> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.toggleChange = this.toggleChange.bind(this);\r\n  }\r\n\r\n  public toggleChange() {\r\n    this.props.toggleChange();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"switch_container\">\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" checked={this.props.checked} onChange={this.toggleChange}/>\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Switch;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Message from \"./components/message\";\nimport Switch from \"./components/switch\";\n// import logo from \"./logo.svg\";\n// import \"./style.scss\";\n\ninterface IState {\n  isChecked: boolean;\n  listOfMsgs: object[];\n  login: string;\n  limit: number;\n  showButton: boolean;\n  listLength: number;\n}\n\nclass App extends React.PureComponent<{}, IState> {\n\n  private myRef = React.createRef<HTMLImageElement>();\n  private inputRef = React.createRef<HTMLInputElement>();\n  private myInterval: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isChecked: true,\n      limit: 0,\n      listOfMsgs: [],\n      login: \"\",\n      showButton: false,\n      listLength: 10,\n    };\n\n    this.myInterval = null;\n\n    this.toggleChange = this.toggleChange.bind(this);\n    // this.buttonClick = this.buttonClick.bind(this);\n    this.fetchMessages = this.fetchMessages.bind(this);\n    this.numberChange = this.numberChange.bind(this);\n    this.loginChange = this.loginChange.bind(this);\n    this.scrollEvent = this.scrollEvent.bind(this);\n    this.scrollToTop = this.scrollToTop.bind(this);\n  }\n\n  public componentDidMount() {\n    if (localStorage.getItem(\"dark_theme\")) {\n      // const switchValue = JSON.parse(localStorage.getItem(\"dark_theme\") || \"\");\n\n      this.setState({\n        isChecked: JSON.parse(localStorage.getItem(\"dark_theme\") || \"\"),\n      });\n    }\n\n    const myLimit = localStorage.getItem(\"limit\");\n\n    this.setState({\n      limit: myLimit != null ? parseInt(myLimit, 10) : 100 || 100,\n      login: localStorage.getItem(\"login\") || \"brudna-malpa\",\n    }, () => {\n      document.title = `Lista donate: ${this.state.login}`;\n      this.fetchMessages();\n      // this.fetchMessages().then((response) => {\n      //   if (response) {\n      //     this.myInterval = setInterval(this.fetchMessages, 5000);\n      //   }\n      // });\n    });\n\n    window.addEventListener(\"scroll\", this.scrollEvent, true);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollEvent, true);\n    clearInterval(this.myInterval);\n  }\n\n  public scrollEvent() {\n\n    if (\n      // (window.innerHeight + window.pageYOffset) >= document.body.offsetHeight - 2\n      // (window.innerHeight + window.pageYOffset) >= document.body.offsetHeight - 2\n      (window.innerHeight + window.pageYOffset) >= (document.body.offsetHeight - window.innerHeight)\n    ) {\n      this.setState({\n        listLength: this.state.listLength + 10,\n      });\n\n      // , () => {\n      //   if(this.state.listOfMsgs.length > this.state.listLength){\n      //     this.fetchMessages();\n      //   }\n      // });\n    }\n\n    if(window.scrollY <= 0) {\n      this.setState({\n        listLength: 10,\n      });\n    }\n\n    if (window.scrollY > window.innerHeight) {\n      this.setState({\n        showButton: true,\n      });\n    } else {\n      this.setState({\n        showButton: false,\n      });\n    }\n  }\n\n  public fetchMessages() {\n\n    const { login, limit } = this.state;\n\n    const myBody = {\n      calls: [{\n        method: \"POST\",\n        params: {\n          limit: 50,\n          login: \"brudna-malpa\",\n          offset: 0,\n        },\n        url: \"/user/page/getMessagesByLogin\",\n      }],\n      lang: \"pl\",\n      token: \"0\",\n    };\n\n    try {\n      return fetch(\"https://prod.tipanddonation.com/core/batchcall\", {\n        body: JSON.stringify(myBody),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n      })\n      .then((response) => response.json())\n      .then((data) => {\n\n        this.setState({\n          listOfMsgs: data[myBody.calls[0].url].data.data,\n        });\n\n        //return data[myBody.calls[0].url].success;\n      });\n    } catch (e) {\n      console.log('Error');\n    }\n  }\n\n  public renderMsgs() {\n    const list = this.state.listOfMsgs;\n\n    const listLimit = list !== undefined ? list.slice(0, this.state.listLength) : undefined;\n\n    return listLimit !== undefined ? listLimit.map((value: any, index) => (\n      <Message key={index} value={value} theme={this.state.isChecked} index={index}/>\n    )) : <div style={{height: \"100vh\", fontSize: \"4em\"}} />;\n  }\n\n  public toggleChange() {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    }, () => {\n      localStorage.setItem(\"dark_theme\", this.state.isChecked.toString());\n    });\n  }\n\n  public numberChange(e: React.ChangeEvent<HTMLInputElement>) {\n\n    let limit = parseInt(e.currentTarget.value, 10);\n\n    if(limit >= 500) {\n      limit = 500;\n    }\n\n    this.setState({\n      limit,\n      listLength: 10\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          limit: this.state.limit,\n        }, () => {\n          if (!isNaN(this.state.limit)) {\n            localStorage.setItem(\"limit\", this.state.limit.toString());\n          }\n        });\n      }, 1000);\n    });\n  }\n\n  public loginChange(e: React.ChangeEvent<HTMLInputElement>) {\n    document.title = `Lista donate: ${e.currentTarget.value}`;\n    this.setState({\n      login: e.currentTarget.value,\n      listLength: 10\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          login: this.state.login,\n        }, () => {\n          if (this.state.login !== \"\") {\n            localStorage.setItem(\"login\", this.state.login);\n          }\n        });\n      }, 1000);\n    });\n  }\n\n  public scrollToTop() {\n    window.scroll({top: 0, behavior: \"smooth\"});\n  }\n\n  public render() {\n    const { isChecked, showButton } = this.state;\n\n    return (\n      <div className={`App ${isChecked ? \"dark_theme\" : \"light_theme\"}`}>\n        {/* <input ref={this.inputRef} type=\"text\" /> */}\n        <Switch checked={isChecked} toggleChange={this.toggleChange}/>\n        <div className=\"page-container\">\n          {/* <div className={`input_container ${isChecked ? \"input_dark_container\" : \"\"}`}>\n            <input\n                  className={`myInput ${isChecked ? \"myInput_dark_theme\" : \"\"}`}\n                  type=\"text\"\n                  onChange={this.loginChange}\n                  onBlur={this.fetchMessages}\n                  value={this.state.login}\n            />\n            <input\n                  className={`myInput ${isChecked ? \"myInput_dark_theme\" : \"\"}`}\n                  type=\"text\"\n                  onChange={this.numberChange}\n                  onBlur={this.fetchMessages}\n                  value={this.state.limit || \"\"}\n            />\n          </div> */}\n          {/* <button style={{padding: \"20px\", backgroundColor: \"lightblue\", width: \"1000px\", margin: \"20px\" }}\n      onClick={this.buttonClick}>Odśwież</button> */}\n          {this.renderMsgs()}\n        </div>\n        <div\n             onClick={this.scrollToTop}\n             className={`arrow-up ${isChecked ? \"arrow-up-dark-theme\" : \"\"}`}\n             style={{display: showButton ? \"block\" : \"none\"}}\n        >\n          &#x2191;\n        </div>\n      </div>\n      // <div className=\"grid-container\">\n      //   <div className=\"grid-item nums\">\n      //     <div className=\"grid-subitem num\">Num<br/>Lock</div>\n      //     <div className=\"grid-subitem slash\">/</div>\n      //     <div className=\"grid-subitem asterisk\">*</div>\n      //     <div className=\"grid-subitem minus\">-</div>\n      //     <div className=\"grid-subitem seven\">7<br/>Home</div>\n      //     <div className=\"grid-subitem eight\">8<br/>&#x2191;</div>\n      //     <div className=\"grid-subitem nine\">9<br/>PgUp</div>\n      //     <div className=\"grid-subitem plus\">+</div>\n      //     <div className=\"grid-subitem four\">4<br/>&#8592;</div>\n      //     <div className=\"grid-subitem five\">5</div>\n      //     <div className=\"grid-subitem six\">6<br/>&#8594;</div>\n      //     <div className=\"grid-subitem one\">1<br/>End</div>\n      //     <div className=\"grid-subitem two\">2<br/>&#8595;</div>\n      //     <div className=\"grid-subitem three\">3<br/>PgDn</div>\n      //     <div className=\"grid-subitem enter\">Enter</div>\n      //     <div className=\"grid-subitem zero\">0<br/>Ins</div>\n      //     <div className=\"grid-subitem dot\">.<br/>Del</div>\n      //   </div>\n      //   <div className=\"grid-item upkeys\">\n      //     <div className=\"grid-subitem print\">Print<br/>Screen</div>\n      //     <div className=\"grid-subitem scroll\">Scroll<br/>Lock</div>\n      //     <div className=\"grid-subitem pause\">Pause<br/>Break</div>\n      //   </div>\n      //   <div className=\"grid-item funkeys\">\n      //     <div className=\"grid-subitem insert\">Insert</div>\n      //     <div className=\"grid-subitem home\">Home</div>\n      //     <div className=\"grid-subitem pgup\">Page<br/>Up<br/>☼+</div>\n      //     <div className=\"grid-subitem delete\">Delete</div>\n      //     <div className=\"grid-subitem end\">End</div>\n      //     <div className=\"grid-subitem pgdn\">Page<br/>Down<br/>☼-</div>\n      //   </div>\n      //   <div className=\"grid-item arrowkeys\">\n      //     <div className=\"grid-subitem arrup\">&#x2191; w</div>\n      //     <div className=\"grid-subitem arrlt\">a &#8592;</div>\n      //     <div className=\"grid-subitem arrdn\">&#8595; s</div>\n      //     <div className=\"grid-subitem arrrt\">d &#8594;</div>\n      //   </div>\n      // </div>\n      // <header className={`App-header ${this.state.isChecked ? \"dark_theme\" : \"light_theme\"}`}>\n      //   {/* style={this.state.isChecked ? {backgroundColor: \"#282c34\"} : {}} */}\n      //     <Switch checked={isChecked} toggleChange={this.toggleChange}/>\n      //     <img ref={this.myRef} src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.tsx</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n    );\n  }\n\n  // private buttonClick(e: any) {\n  //   // const elem = this.myRef.current;\n  //   // const vi = this.inputRef.current;\n\n  //   // if (vi) {\n  //   //   console.log(vi.value);\n  //   // }\n\n  //   this.fetchMessages();\n  // }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import NewApp from \"./NewApp\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}