{"version":3,"sources":["components/message/index.tsx","components/switch/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Message","this","props","value","content","replace","__html","concat","_this$props","theme","index","amountNetto","Math","fround","payment","amount_netto","toFixed","dateF","Date","created_at","dateNow","yesterdayDate","setDate","getDate","day","month","getMonth","newMonth","hour","getHours","minute","getMinutes","second","getSeconds","newDate","getFullYear","newContent","changeUrl","urls","match","finalUrls","date2daysBack","react_default","a","createElement","style","display","className","login","currency","provider","dangerouslySetInnerHTML","createMarkup","React","PureComponent","Switch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleChange","bind","assertThisInitialized","type","checked","onChange","Component","App","state","isChecked","limit","listLength","listOfMsgs","showButton","isActiveList","fetchMessages","scrollEvent","scrollToTop","switchToTips","switchToList","localStorage","getItem","setState","JSON","parse","document","title","window","addEventListener","removeEventListener","innerHeight","pageYOffset","body","offsetHeight","scrollY","_this2","myBody","calls","method","params","offset","url","lang","token","fetch","stringify","headers","Access-Control-Allow-Origin","Content-Type","then","response","json","data","results","createdDonateDate","isDateNotOK","_fetchNewMessages","asyncToGenerator","regenerator_default","mark","_callee","newResponse","newData","wrap","_context","prev","next","sent","abrupt","stop","apply","arguments","fetchNewMessages","datas","reverse","e","_this3","list","listLimit","undefined","slice","map","message","key","height","fontSize","_this4","setItem","toString","scroll","top","behavior","_this$state","components_switch","renderMsgs","width","src","onClick","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.061ff0e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nclass Message extends React.PureComponent<any> {\r\n  public changeUrl() {\r\n    const {value} = this.props;\r\n\t\tconst {content} = value;\r\n\r\n    const urls = content.replace(\"https:\", \"https://\");\r\n    const ytLinks = urls.replace(\"youtube.com\", \"youtube.com/\");\r\n\r\n    const picosongLinks = ytLinks.replace(\"picosong.com\", \"picosong.com/\");\r\n\r\n    const ytShortLinks = picosongLinks.replace(\"youtu.be\", \"youtu.be/\");\r\n\r\n    const sCLinks = ytShortLinks.replace(\"soundcloud.com\", \"soundcloud.com/\");\r\n\r\n    const finalSCLinks = sCLinks.replace(\"[...]\", \"/\");\r\n\r\n    return finalSCLinks;\r\n  }\r\n\r\n  public createMarkup(content: any) {\r\n    return { __html: `${content}` };\r\n  }\r\n\r\n  public render() {\r\n\r\n    const {value, theme, index} = this.props;\r\n\r\n    const amountNetto = Math.fround(value.payment.amount_netto / 100).toFixed(2);\r\n\r\n\t\tconst dateF = new Date(value.created_at);\r\n\t\t\r\n\t\tconst dateNow = new Date();\r\n\r\n\t\tconst yesterdayDate = new Date();\r\n\t\tyesterdayDate.setDate(yesterdayDate.getDate() - 1);\r\n\r\n    const day = dateF.getDate() < 10 ? `0${dateF.getDate()}` : dateF.getDate();\r\n    const month = dateF.getMonth() + 1;\r\n    const newMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const hour = dateF.getHours() < 10 ? `0${dateF.getHours()}` : dateF.getHours();\r\n    const minute = dateF.getMinutes() < 10 ? `0${dateF.getMinutes()}` : dateF.getMinutes();\r\n    const second = dateF.getSeconds() < 10 ? `0${dateF.getSeconds()}` : dateF.getSeconds();\r\n\r\n    const newDate = `${day}-${newMonth}-${dateF.getFullYear()} ${hour}:${minute}:${second}`;\r\n\r\n    const newContent = this.changeUrl();\r\n\r\n    const urls = newContent.match(/\\bhttps?:\\/\\/\\S+/);\r\n\r\n\t\tconst finalUrls = newContent.replace(urls, `<a href=\"${urls}\">${urls}</a>`);\r\n\t\t\r\n\t\tconst date2daysBack = (dateNow.getDate() == dateF.getDate()) || (yesterdayDate.getDate() == dateF.getDate());\r\n\r\n    return (\r\n      <div style={date2daysBack ? {}: {display: 'none'}} className={`message_container ${theme ? \"message_container_dark_theme\" : \"\"}`}>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_login\">{value.login}</div>\r\n          <div className=\"message_currency\">\r\n            {amountNetto} {value.payment.currency}\r\n          </div>\r\n        </div>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_date_prov\">{newDate}</div>\r\n          <div className=\"message_date_prov\">\r\n            Płatność: {value.payment.provider}\r\n          </div>\r\n        </div>\r\n        <div className=\"message_content\" dangerouslySetInnerHTML={this.createMarkup(finalUrls)} />\r\n        <div className=\"numberOfDonate\">{index + 1}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\ninterface IProps {\r\n  checked: boolean;\r\n  toggleChange: () => void;\r\n}\r\n\r\nclass Switch extends Component<IProps, {}> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.toggleChange = this.toggleChange.bind(this);\r\n  }\r\n\r\n  public toggleChange() {\r\n    this.props.toggleChange();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"switch_container\">\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" checked={this.props.checked} onChange={this.toggleChange}/>\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Switch;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Message from \"./components/message\";\nimport Switch from \"./components/switch\";\n\n//{\"calls\":[{\"url\":\"/user/page/getMessagesByLogin\",\"method\":\"POST\",\"params\":{\"offset\":0,\"limit\":100,\"login\":\"brudna-malpa\"}}],\"token\":\"0\",\"lang\":\"pl\"}\n\ninterface IState {\n  isChecked: boolean;\n  listOfMsgs: object[];\n  login: string;\n  limit: number;\n  showButton: boolean;\n  listLength: number;\n  isActiveList: boolean;\n}\n\nclass App extends React.PureComponent<{}, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isChecked: true,\n      limit: 0,\n      listLength: 10,\n      listOfMsgs: [],\n      login: \"\",\n      showButton: false,\n      isActiveList: true,\n    };\n\n    this.toggleChange = this.toggleChange.bind(this);\n    this.fetchMessages = this.fetchMessages.bind(this);\n    this.scrollEvent = this.scrollEvent.bind(this);\n    this.scrollToTop = this.scrollToTop.bind(this);\n    this.switchToTips = this.switchToTips.bind(this);\n    this.switchToList = this.switchToList.bind(this);\n  }\n\n  public componentDidMount() {\n    if (localStorage.getItem(\"dark_theme\")) {\n      this.setState({\n        isChecked: JSON.parse(localStorage.getItem(\"dark_theme\") || \"\"),\n      });\n    }\n\n    document.title = \"Lista donate: brudna-malpa\";\n    this.fetchMessages();\n\n    window.addEventListener(\"scroll\", this.scrollEvent, true);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollEvent, true);\n  }\n\n  public scrollEvent() {\n\n    if ((window.innerHeight + window.pageYOffset) >= (document.body.offsetHeight - window.innerHeight)) {\n      this.setState({\n        listLength: this.state.listLength + 10,\n      });\n    }\n\n    if (window.scrollY > window.innerHeight) {\n      this.setState({\n        showButton: true,\n      });\n    } else {\n      this.setState({\n        showButton: false,\n      });\n    }\n  }\n\n  public fetchMessages() {\n    const myBody = {\n      calls: [{\n        method: \"POST\",\n        params: {\n          limit: 1,\n          login: \"brudna-malpa\",\n          offset: 0,\n        },\n        url: \"/user/page/getMessagesByLogin\",\n      }],\n      lang: \"pl\",\n      token: \"0\",\n    };\n\n    try {\n      fetch(\"https://prod.tipanddonation.com/api/core/batchcall\", {\n        body: JSON.stringify(myBody),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n      })\n      .then((response) => response.json())\n      .then((data) => {\n\t\t\t\t// console.log(data[myBody.calls[0].url].data.results);\n\t\t\t\tconst results = data[myBody.calls[0].url].data.results;\n\n\t\t\t\tconst createdDonateDate =\n\t\t\t\t\tdata[myBody.calls[0].url].data.data[0].created_at;\n\t\t\t\tconst dateDonate = new Date(`${createdDonateDate}`);\n\n\t\t\t\tconst isDateNotOK =\n\t\t\t\t\t\tdateDonate.getFullYear() !== new Date().getFullYear();\n\n\t\t\t\t// async function fetchOldMessages() {\n\t\t\t\t// \tconst myBodyOldTemp = {\n\t\t\t\t// \t\tcalls: [\n\t\t\t\t// \t\t\t{\n\t\t\t\t// \t\t\t\tmethod: \"POST\",\n\t\t\t\t// \t\t\t\tparams: {\n\t\t\t\t// \t\t\t\t\tlimit: 150,\n\t\t\t\t// \t\t\t\t\tlogin: \"brudna-malpa\",\n\t\t\t\t// \t\t\t\t\toffset: 0\n\t\t\t\t// \t\t\t\t},\n\t\t\t\t// \t\t\t\turl: \"/user/page/getMessagesByLogin\"\n\t\t\t\t// \t\t\t}\n\t\t\t\t// \t\t],\n\t\t\t\t// \t\tlang: \"pl\",\n\t\t\t\t// \t\ttoken: \"0\"\n\t\t\t\t// \t};\n\n\t\t\t\t// \tconst newResponse = await fetch(\n\t\t\t\t// \t\t\"https://prod.tipanddonation.com/core/batchcall\",\n\t\t\t\t// \t\t{\n\t\t\t\t// \t\t\tbody: JSON.stringify(myBodyOldTemp),\n\t\t\t\t// \t\t\theaders: {\n\t\t\t\t// \t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t// \t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t// \t\t\t},\n\t\t\t\t// \t\t\tmethod: \"POST\"\n\t\t\t\t// \t\t}\n\t\t\t\t// \t);\n\n\t\t\t\t// \tconst newData = await newResponse.json();\n\n\t\t\t\t// \treturn newData[myBodyOldTemp.calls[0].url].data.data;\n\t\t\t\t// }\n\n\t\t\t\tasync function fetchNewMessages() {\n\t\t\t\t\tmyBody.calls[0].params.limit = 150;\n\t\t\t\t\tmyBody.calls[0].params.offset = (isDateNotOK) ? results - 150 : 0;\n\t\t\t\t\t// const myBodyNextTemp = {\n\t\t\t\t\t// \tcalls: [\n\t\t\t\t\t// \t\t{\n\t\t\t\t\t// \t\t\tmethod: \"POST\",\n\t\t\t\t\t// \t\t\tparams: {\n\t\t\t\t\t// \t\t\t\tlimit: 150,\n\t\t\t\t\t// \t\t\t\tlogin: \"brudna-malpa\",\n\t\t\t\t\t// \t\t\t\toffset: (isDateNotOK) ?  \n\t\t\t\t\t// \t\t\t\t\tresults - 150 :\n\t\t\t\t\t// \t\t\t\t\t0\n\t\t\t\t\t// \t\t\t},\n\t\t\t\t\t// \t\t\turl: \"/user/page/getMessagesByLogin\"\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t],\n\t\t\t\t\t// \tlang: \"pl\",\n\t\t\t\t\t// \ttoken: \"0\"\n\t\t\t\t\t// };\n\n\t\t\t\t\tconst newResponse = await fetch(\"https://prod.tipanddonation.com/api/core/batchcall\", {\n\t\t\t\t\t\tbody: JSON.stringify(myBody),\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: \"POST\"\n\t\t\t\t\t});\n\n\t\t\t\t\tconst newData = await newResponse.json();\n\n\n\t\t\t\t\treturn newData[myBody.calls[0].url].data.data\n\t\t\t\t}\n\n\t\t\t\t// const createdDonateDate = data[myBody.calls[0].url].data.data[0].created_at;\n\t\t\t\t// const dateDonate = new Date(`${createdDonateDate}`);\n\n\t\t\t\t// if(dateDonate.getFullYear() !== new Date().getFullYear()) {\n\t\t\t\t// \tfetchNewMessages().then(datas => {\n\t\t\t\t// \t\tthis.setState({\n\t\t\t\t// \t\t\tlistOfMsgs: datas.reverse()\n\t\t\t\t// \t\t});\n\t\t\t\t// \t});\n\t\t\t\t// } else {\n\t\t\t\t// \tfetchOldMessages().then(oldWayDatas => {\n\t\t\t\t// \t\tthis.setState({\n\t\t\t\t// \t\t\tlistOfMsgs: oldWayDatas\n\t\t\t\t// \t\t});\n\t\t\t\t// \t})\n\t\t\t\t// }\n\n\t\t\t\tfetchNewMessages().then(datas => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlistOfMsgs: (isDateNotOK) ? (datas) ? datas.reverse() : [] : datas \n\t\t\t\t\t})\n\t\t\t\t})\n      });\n    } catch (e) {\n      // Error\n    }\n  }\n\n  public renderMsgs() {\n    const list = this.state.listOfMsgs;\n\n    const listLimit = list !== undefined ? list.slice(0, this.state.listLength) : undefined;\n\n    return listLimit !== undefined ? listLimit.map((value: any, index) => (\n      <Message key={index} value={value} theme={this.state.isChecked} index={index}/>\n    )) : <div style={{height: \"100vh\", fontSize: \"4em\"}} />;\n  }\n\n  public toggleChange() {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    }, () => {\n      localStorage.setItem(\"dark_theme\", this.state.isChecked.toString());\n    });\n  }\n\n  public scrollToTop() {\n    window.scroll({top: 0, behavior: \"smooth\"});\n  }\n\n  public switchToTips() {\n    this.setState({\n      isActiveList: false\n    });\n  }\n\n  public switchToList() {\n\t\tthis.fetchMessages();\n    this.setState({\n      isActiveList: true\n\t\t});\n  }\n\n  public render() {\n    const { isChecked, showButton, isActiveList } = this.state;\n\n    return (\n      <div className={`App ${isChecked ? \"dark_theme\" : \"light_theme\"}`}>\n        <Switch checked={isChecked} toggleChange={this.toggleChange}/>\n        {/* <div className={`page-container ${isChecked ? \"switchPageButtonsContainerDark\" : \"switchPageButtonsContainerLight\"}`}>\n          <button className={`switchPageButton ${isChecked ? isActiveList ? \"isActiveButtonDark\" : \"\" : isActiveList ? \"isActiveButtonLight\" : \"\"}`} onClick={this.switchToList} disabled={isActiveList ? true : false}>Lista</button>\n          <button className={`switchPageButton ${isChecked ? isActiveList ? \"\" : \"isActiveButtonDark\" : isActiveList ? \"\" : \"isActiveButtonLight\"}`} onClick={this.switchToTips}>Napiwki</button>\n        </div> */}\n        { isActiveList ? ( \n        <div className=\"page-container\">\n          {this.renderMsgs()}\n        </div>\n        ) : (\n          <div className=\"page-container\">\n            <iframe title=\"tipanddonation\" style={{width: \"100%\", height: \"94vh\"}} src=\"https://tipanddonation.com/brudna-malpa\"></iframe>\n          </div>\n        )\n        }\n        <div\n             onClick={this.scrollToTop}\n             className={`arrow-up ${isChecked ? \"arrow-up-dark-theme\" : \"\"}`}\n             style={{display: showButton ? \"block\" : \"none\"}}\n        >\n          &#x2191;\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import NewApp from \"./NewApp\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}