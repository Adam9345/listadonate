{"version":3,"sources":["components/message/index.tsx","components/switch/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Message","this","props","value","content","replace","_this$props","theme","amountNetto","Math","fround","payment","amount_netto","toFixed","dateF","Date","created_at","day","getDate","concat","month","getMonth","newMonth","hour","getHours","minute","getMinutes","second","getSeconds","newDate","getFullYear","newContent","changeUrl","urls","match","finalUrls","react_default","a","createElement","className","login","currency","provider","dangerouslySetInnerHTML","__html","Component","Switch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleChange","bind","assertThisInitialized","type","checked","onChange","App","myRef","React","createRef","inputRef","state","isChecked","limit","listOfMsgs","showButton","buttonClick","fetchMessages","numberChange","loginChange","scrollEvent","_this2","localStorage","getItem","setState","JSON","parse","myLimit","parseInt","then","response","setInterval","window","addEventListener","removeEventListener","scrollY","innerHeight","myBody","calls","method","params","offset","url","lang","token","fetch","body","stringify","headers","Access-Control-Allow-Origin","Content-Type","json","data","_this3","success","console","log","_context","t0","_this4","list","undefined","map","index","message","key","style","height","fontSize","e","_this5","setItem","toString","_this6","currentTarget","setTimeout","_this7","scroll","top","behavior","_this$state2","components_switch","max","renderMsgs","onClick","scrollToTop","display","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e57f2208.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./style.scss\";\r\n\r\nclass Message extends Component<any> {\r\n\r\n  public changeUrl() {\r\n    const {value} = this.props;\r\n    const {content} = value;\r\n\r\n    const newUrl = content.replace(\"https:\", \"https://\");\r\n    const newLink = newUrl.replace(\"youtube.com\", \"youtube.com/\");\r\n\r\n    const fixedLinks = newLink.replace(\"picosong.com\", \"picosong.com/\");\r\n\r\n    const fixedLinks2 = fixedLinks.replace(\"youtu.be\", \"youtu.be/\");\r\n\r\n    return fixedLinks2;\r\n  }\r\n\r\n  public render() {\r\n\r\n    const {value, theme} = this.props;\r\n\r\n    // const amountBrutto = Math.fround(value.payment.amount_brutto / 100).toFixed(2);\r\n    const amountNetto = Math.fround(value.payment.amount_netto / 100).toFixed(2);\r\n\r\n    const dateF = new Date(value.created_at);\r\n\r\n    const day = dateF.getDate() < 10 ? `0${dateF.getDate()}` : dateF.getDate();\r\n    const month = dateF.getMonth() + 1;\r\n    const newMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const hour = dateF.getHours() < 10 ? `0${dateF.getHours()}` : dateF.getHours();\r\n    const minute = dateF.getMinutes() < 10 ? `0${dateF.getMinutes()}` : dateF.getMinutes();\r\n    const second = dateF.getSeconds() < 10 ? `0${dateF.getSeconds()}` : dateF.getSeconds();\r\n\r\n    const newDate = `${day}-${newMonth}-${dateF.getFullYear()} ${hour}:${minute}:${second}`;\r\n\r\n    const newContent = this.changeUrl();\r\n\r\n    const urls = newContent.match(/\\bhttps?:\\/\\/\\S+/);\r\n\r\n    const finalUrls = newContent.replace(urls, `<a href=\"${urls}\">${urls}</a>`);\r\n\r\n    return (\r\n      <div className={`message_container ${theme ? \"message_container_dark_theme\" : \"\"}`}>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_login\">{value.login}</div>\r\n          <div className=\"message_currency\">{amountNetto} {value.payment.currency}</div>\r\n        </div>\r\n        <div className=\"message_flex\">\r\n          <div className=\"message_date_prov\">{newDate}</div>\r\n          <div className=\"message_date_prov\">Płatność: {value.payment.provider}</div>\r\n        </div>\r\n        <div className=\"message_content\" dangerouslySetInnerHTML={{\r\n          __html: finalUrls\r\n        }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\ninterface IProps {\r\n  checked: boolean;\r\n  toggleChange: () => void;\r\n}\r\n\r\nclass Switch extends Component<IProps, {}> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.toggleChange = this.toggleChange.bind(this);\r\n  }\r\n\r\n  public toggleChange() {\r\n    this.props.toggleChange();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"switch_container\">\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" checked={this.props.checked} onChange={this.toggleChange}/>\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Switch;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Message from \"./components/message\";\nimport Switch from \"./components/switch\";\n// import logo from \"./logo.svg\";\n// import \"./style.scss\";\n\ninterface IState {\n  isChecked: boolean;\n  listOfMsgs: object[];\n  login: string;\n  limit: number;\n  showButton: boolean;\n}\n\nclass App extends Component<{}, IState> {\n\n  private myRef = React.createRef<HTMLImageElement>();\n  private inputRef = React.createRef<HTMLInputElement>();\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n      limit: 0,\n      listOfMsgs: [],\n      login: \"\",\n      showButton: false,\n    };\n\n    this.toggleChange = this.toggleChange.bind(this);\n    this.buttonClick = this.buttonClick.bind(this);\n    this.fetchMessages = this.fetchMessages.bind(this);\n    this.numberChange = this.numberChange.bind(this);\n    this.loginChange = this.loginChange.bind(this);\n    this.scrollEvent = this.scrollEvent.bind(this);\n  }\n\n  public componentDidMount() {\n    if (localStorage.getItem(\"dark_theme\")) {\n      // const switchValue = JSON.parse(localStorage.getItem(\"dark_theme\") || \"\");\n\n      this.setState({\n        isChecked: JSON.parse(localStorage.getItem(\"dark_theme\") || \"\"),\n      });\n    }\n\n    // if (localStorage.getItem(\"login\") && localStorage.getItem(\"limit\")) {\n\n    //   const myLimit = localStorage.getItem(\"limit\");\n\n    //   this.setState({\n    //     limit: myLimit != null ? parseInt(myLimit, 10) : 0,\n    //     login: localStorage.getItem(\"login\") || \"\",\n    //   }, () => {\n    //     this.fetchMessages().then((response) => {\n    //       if (response) {\n    //         setInterval(this.fetchMessages, 1000);\n    //       }\n    //     });\n    //   });\n    // } else {\n    //   this.setState({\n    //     limit: 100,\n    //     login: \"nexe\",\n    //   }, () => {\n    //     this.fetchMessages().then((response) => {\n    //       if (response) {\n    //         setInterval(this.fetchMessages, 1000);\n    //       }\n    //     });\n    //   });\n    // }\n\n    const myLimit = localStorage.getItem(\"limit\");\n\n    this.setState({\n      limit: myLimit != null ? parseInt(myLimit, 10) : 100,\n      login: localStorage.getItem(\"login\") || \"brudna-malpa\",\n    }, () => {\n      this.fetchMessages().then((response) => {\n        if (response) {\n          setInterval(this.fetchMessages, 5000);\n        }\n      });\n    });\n\n\n\n    // fetch(\"https://prod.tipanddonation.com/core/batchcall\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //   },\n    //   body: JSON.stringify(myBody)\n    // })\n    // .then(response => response.json())\n    // .then(data => {\n    //   this.setState({\n    //     listOfMsgs: data[myBody.calls[0].url].data.data\n    //   })\n    //   console.log(data[myBody.calls[0].url].data.data);\n    // })\n\n    window.addEventListener(\"scroll\", this.scrollEvent, true);\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.scrollEvent, true);\n  }\n\n  public scrollEvent() {\n    if (window.scrollY > window.innerHeight) {\n      this.setState({\n        showButton: true,\n      });\n    } else {\n      this.setState({\n        showButton: false,\n      });\n    }\n  }\n\n  public async fetchMessages() {\n\n    const { login, limit } = this.state;\n\n    const myBody = {\n      calls: [{\n        method: \"POST\",\n        params: {\n          limit,\n          login,\n          offset: 0,\n        },\n        url: \"/user/page/getMessagesByLogin\",\n      }],\n      lang: \"pl\",\n      token: \"0\",\n    };\n\n    try {\n      return await fetch(\"https://prod.tipanddonation.com/core/batchcall\", {\n        body: JSON.stringify(myBody),\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          listOfMsgs: data[myBody.calls[0].url].data.data,\n        });\n\n        return data[myBody.calls[0].url].success;\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  public renderMsgs() {\n    const list = this.state.listOfMsgs;\n\n    try {\n    return list !== undefined ? list.map((value: any, index) => (\n      <Message key={index} value={value} theme={this.state.isChecked} />\n      // <div key={index}\n      //     style={{backgroundColor: \"#505050\", padding: \"20px\", margin: \"20px\", textAlign: \"left\",\n      //     borderRadius: \"20px\"}}>\n      //   <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      //     <div style={{color: \"lightgreen\", marginBottom: \"20px\"}}>{value.login}</div>\n      //     <div style={{color: \"lightgreen\", fontSize: \"20px\"}}>\n      //      {Math.fround(value.payment.amount_brutto / 100).toFixed(2)} {value.payment.currency}\n      //     </div>\n      //   </div>\n      //   <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      //     <div style={{color: \"#a0a0a0\", marginBottom: \"20px\"}}>{value.created_at}</div>\n      //     <div style={{color: \"#a0a0a0\", marginBottom: \"20px\"}}>Płatność: {value.payment.provider}</div>\n      //   </div>\n      //   <div style={{fontSize: \"20px\"}}>{value.content}</div>\n      // </div>\n    )) : <div style={{height: \"100vh\", fontSize: \"4em\"}}>Error</div>;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  public toggleChange() {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    }, () => {\n      localStorage.setItem(\"dark_theme\", this.state.isChecked.toString());\n    });\n  }\n\n  public numberChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      limit: parseInt(e.currentTarget.value, 10),\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          limit: this.state.limit,\n        }, () => {\n          localStorage.setItem(\"limit\", this.state.limit.toString());\n        });\n      }, 1000);\n    });\n  }\n\n  public loginChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      login: e.currentTarget.value,\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          login: this.state.login,\n        }, () => {\n          localStorage.setItem(\"login\", this.state.login);\n        });\n      }, 1000);\n    });\n\n  }\n\n  public scrollToTop() {\n    window.scroll({top: 0, behavior: \"smooth\"});\n  }\n\n  public render() {\n    const { isChecked, showButton } = this.state;\n\n    return (\n      <div className={`App ${isChecked ? \"dark_theme\" : \"light_theme\"}`}>\n        {/* <input ref={this.inputRef} type=\"text\" /> */}\n        <Switch checked={isChecked} toggleChange={this.toggleChange}/>\n        {/* <button style={{padding: \"20px\", backgroundColor: \"lightblue\", width: \"1000px\", margin: \"20px\" }}\n      onClick={this.buttonClick}>Odśwież</button> */}\n        <div className=\"page-container\">\n          <input\n                className={`myInput ${isChecked ? \"myInput_dark_theme\" : \"\"}`}\n                type=\"text\"\n                onChange={this.loginChange}\n                value={this.state.login}\n          />\n          <input\n                className={`myInput ${isChecked ? \"myInput_dark_theme\" : \"\"}`}\n                type=\"number\"\n                onChange={this.numberChange}\n                value={this.state.limit}\n                max=\"1000\"\n          />\n          {this.renderMsgs()}\n        </div>\n        <div\n             onClick={this.scrollToTop}\n             className={`arrow-up ${isChecked ? \"arrow-up-dark-theme\" : \"\"}`}\n             style={{display: showButton ? \"block\" : \"none\"}}\n        >\n          &#x2191;\n        </div>\n      </div>\n      // <div className=\"grid-container\">\n      //   <div className=\"grid-item nums\">\n      //     <div className=\"grid-subitem num\">Num<br/>Lock</div>\n      //     <div className=\"grid-subitem slash\">/</div>\n      //     <div className=\"grid-subitem asterisk\">*</div>\n      //     <div className=\"grid-subitem minus\">-</div>\n      //     <div className=\"grid-subitem seven\">7<br/>Home</div>\n      //     <div className=\"grid-subitem eight\">8<br/>&#x2191;</div>\n      //     <div className=\"grid-subitem nine\">9<br/>PgUp</div>\n      //     <div className=\"grid-subitem plus\">+</div>\n      //     <div className=\"grid-subitem four\">4<br/>&#8592;</div>\n      //     <div className=\"grid-subitem five\">5</div>\n      //     <div className=\"grid-subitem six\">6<br/>&#8594;</div>\n      //     <div className=\"grid-subitem one\">1<br/>End</div>\n      //     <div className=\"grid-subitem two\">2<br/>&#8595;</div>\n      //     <div className=\"grid-subitem three\">3<br/>PgDn</div>\n      //     <div className=\"grid-subitem enter\">Enter</div>\n      //     <div className=\"grid-subitem zero\">0<br/>Ins</div>\n      //     <div className=\"grid-subitem dot\">.<br/>Del</div>\n      //   </div>\n      //   <div className=\"grid-item upkeys\">\n      //     <div className=\"grid-subitem print\">Print<br/>Screen</div>\n      //     <div className=\"grid-subitem scroll\">Scroll<br/>Lock</div>\n      //     <div className=\"grid-subitem pause\">Pause<br/>Break</div>\n      //   </div>\n      //   <div className=\"grid-item funkeys\">\n      //     <div className=\"grid-subitem insert\">Insert</div>\n      //     <div className=\"grid-subitem home\">Home</div>\n      //     <div className=\"grid-subitem pgup\">Page<br/>Up<br/>☼+</div>\n      //     <div className=\"grid-subitem delete\">Delete</div>\n      //     <div className=\"grid-subitem end\">End</div>\n      //     <div className=\"grid-subitem pgdn\">Page<br/>Down<br/>☼-</div>\n      //   </div>\n      //   <div className=\"grid-item arrowkeys\">\n      //     <div className=\"grid-subitem arrup\">&#x2191; w</div>\n      //     <div className=\"grid-subitem arrlt\">a &#8592;</div>\n      //     <div className=\"grid-subitem arrdn\">&#8595; s</div>\n      //     <div className=\"grid-subitem arrrt\">d &#8594;</div>\n      //   </div>\n      // </div>\n      // <header className={`App-header ${this.state.isChecked ? \"dark_theme\" : \"light_theme\"}`}>\n      //   {/* style={this.state.isChecked ? {backgroundColor: \"#282c34\"} : {}} */}\n      //     <Switch checked={isChecked} toggleChange={this.toggleChange}/>\n      //     <img ref={this.myRef} src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.tsx</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n    );\n  }\n\n  private buttonClick(e: any) {\n    // const elem = this.myRef.current;\n    // const vi = this.inputRef.current;\n\n    // if (vi) {\n    //   console.log(vi.value);\n    // }\n\n    this.fetchMessages();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import NewApp from \"./NewApp\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}